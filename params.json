{"name":"Js-refactor","tagline":"全栈工程师技能训练之重构","body":"#JavaScript Refactor\r\n\r\n只有[Skilltree](https://github.com/phodal/skillock)和[Developer学习路线图](https://github.com/phodal/awesome-developer) 是远远不够的。\r\n\r\n说明: 在构建[EchoesWorks](https://github.com/phodal/echoesworks)的时候用到了这个库，这是一个用于生成Markdown的Micro Markdown库。\r\n\r\n由于对代码重构的最大难题是``没有测试``，在这里我们提供了尽可能高的测试覆盖率。至于功能见测试用例，``测试用例是最好的文档``。\r\n\r\n``注意``: 这里并没有说原来的代码写得不好，只是在这里可以让我们学习重构。\r\n\r\n你要面对的挑战有:\r\n\r\n- 注释 (Comments) (ps: 合理的函数名、变量名可以取代注释)\r\n- 重复代码 (Duplicated Code）\r\n- 过大的类 (Large Class)\r\n- 多层嵌套\r\n- 。。。\r\n\r\n可以参考的模式:\r\n\r\n - Decorator (装饰)\r\n - Composite (组成)\r\n \r\n或者当时我想用的\r\n\r\n - Pipes and Filters\r\n\r\n可以参考的书籍:\r\n\r\n《重构与模式》\r\n\r\n《重构: 改善既有代码的设计》\r\n\r\n测试代码质量:\r\n\r\n[CodeClimate](https://codeclimate.com/)\r\n\r\n相关文章: [用code climate来clean code与重构](http://www.phodal.com/blog/use-code-climate-clean-code-and-refactor/)\r\n\r\n##Setup\r\n\r\n1.Install \r\n\r\n    npm install\r\n    \r\n2.Test\r\n    \r\n    npm test\r\n\r\n\r\nps: 在ThoughtWorks，写出功能代码只是走了一半的路，``红``->``绿``->``重构``。\r\n\r\n\r\nEnjoy it!\r\n\r\n##订阅\r\n\r\n请到[https://github.com/artisanstack/summary](https://github.com/artisanstack/summary)\r\n\r\n点击右上角的``watch``即可订阅。\r\n\r\n##License##\r\n\r\n© 2015 [Phodal Huang](http://www.phodal.com). This code is distributed under the MIT license. See `LICENSE.txt` in this directory.\r\n\r\n[待我代码编成，娶你为妻可好](http://www.xuntayizhan.com/blog/ji-ke-ai-qing-zhi-er-shi-dai-wo-dai-ma-bian-cheng-qu-ni-wei-qi-ke-hao-wan/)\r\n     \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}